/* 
============
Variables
============
*/
:root {
  --primaryColor: #cc0000;
  --mainBlack: #0a0a0a;
  --mainWhite: #eff1ed;
  --offWhite: #e0e4dd;
  --darkGrey: #556062;
  --mainTransition: all 0.3s linear;
  --mainSpacing: 0.2rem;
}
/* 
============
Global Styles
============
*/
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
body {
  font-family: "Fira Code", monospace;
  color: var(--mainBlack);
  line-height: 1.5;
}
a {
  text-decoration: none;
}
img {
  width: 100%;
  display: block;
}
h1,
h2,
h3 {
  text-transform: capitalize;
  letter-spacing: var(--mainSpacing);
  margin-bottom: 1.5rem;
}
h1 {
  font-size: 3rem;
}
h2 {
  margin-bottom: 0;
}
p {
  font-weight: 300;
  font-size: 0.7rem;
  line-height: 2;
}
/* button */
.btn {
  display: inline-block;
  padding: 0.5rem 1rem;
  text-transform: capitalize;
  border: 3px solid var(--primaryColor);
  color: var(--primaryColor);
  margin: 3rem;
  transition: var(--mainTransition);
}
.btn:hover {
  background: var(--primaryColor);
  color: var(--mainWhite);
}
/* 
============
Main Navbar
============
*/
.main-navbar {
  background: var(--darkGrey);
  padding: 0 2rem;
}
.main-navbar li {
  list-style: none;
}
.main-navbar a {
  font-size: 1.5rem;
  text-transform: capitalize;
  display: block;
  padding: 1rem 0;
  color: var(--primaryColor);
  letter-spacing: var(--mainSpacing);
  transition: var(--mainTransition);
}
.main-navbar a:hover {
  color: var(--mainBlack);
}

@media screen and (min-width: 992px) {
  .main-navbar ul {
    max-width: 1170px;
    margin: 0 auto; /*centers container*/
    display: grid;
    grid-template-columns: repeat(4, 1fr);
  }
  .main-navbar a {
    text-align: center;
  }
}
/* 
============
Hero
============
*/
.hero-header {
  min-height: 100vh;
  background: var(--primaryColor);
  color: var(--mainWhite);
  display: grid;
  align-items: center;
  justify-content: center;
}
.hero-banner {
  /* background: blue; */
  /* text-align: center; */
}
.hero-banner p {
  width: 80%;
  max-width: 560px;
  font-size: 1.2rem;
  margin: 0 auto;
}
.hero-banner h1 {
  text-align: center;
}

@media screen and (max-width: 600px) {
  .hero-banner {
    padding: 0 3rem;
  }
}
@media screen and (min-width: 768px) {
  .hero-header {
    background: linear-gradient(rgba(244, 0, 0, 0.75), rgba(85, 96, 98, 0.75)),
      url("../images/image-c2.jpeg") center/cover fixed no-repeat;
  }
}

/* 
============
Cards
============
*/
.title {
  text-align: center;
}
.cards {
  padding: 4rem 0;
}
.cards-center,
.cards-center-1,
.cards-center-2,
.cards-center-3 {
  width: 80vw;
  max-width: 1170px;
  margin: 2rem auto;
}
.card,
.card-1 {
  border: 1px solid var(--darkGrey);
  margin-bottom: 3rem;
}
.card-info {
  padding: 1rem;
}
.card-info p {
  text-align: justify;
}
.card-footer {
  background: var(--darkGrey);
  padding: 0.5rem 1rem;
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  justify-items: center;
}
.card-footer span {
  color: var(--primaryColor);
}
/* media queries are well known */

/* @media screen and (min-width: 768px) {
  .cards-center {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    column-gap: 2rem;
  }
}
@media screen and (min-width: 1170px) {
  .cards-center {
    grid-template-columns: repeat(3, 1fr);
  }
} */

/* instead we'll use display grid for larger screens */
/* with minmax command there is no need for media queries. */
/* take screen size=1170px, just as above.
the spacing between the images is 2rem=2x16px=64px.
because there are 3 images ans two spacings.
Thus, each image shoud have a width of 
(1170-64)/3= 368.67px. */

.cards-center {
  display: grid;
  column-gap: 2rem;
  grid-template-columns: repeat(auto-fill, minmax(368px, 1fr));
}
/* With auto-fill, if there is only one item, the remaining space will remain empty. and the rest of the columns, will remain there, though empty. */
/* if we use auto-fit instead, if there are enough items, the result is the same. Otherwise, one picture will spann so as to using the remaining space */

/* if height differs among cards, then: */
/* if nothing is done, the heighs will be defferent.
 To fix that use:*/
.card-1 {
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: auto 1fr auto;
  /* cards-1 consists of 3 divs: image, info & footer */
}
.cards-center-1,
.cards-center-3 {
  display: grid;
  column-gap: 2rem;
  grid-template-columns: repeat(auto-fill, minmax(368px, 1fr));
}
/* Auto-fit-- above three cards auto-fii and auto-fit behave identical */
.cards-center-2 {
  display: grid;
  column-gap: 2rem;
  grid-template-columns: repeat(auto-fit, minmax(368px, 1fr));
}
/* 
============
Tiles
============
*/
.tiles {
  padding: 4rem 0;
}
.tiles-center {
  width: 90vw;
  max-width: 1170px;
  margin: 0 auto;
  display: grid;
  row-gap: 2rem;
}
.tile-border {
  border: 2px solid black;
}

@media screen and (min-width: 768px) {
  .tiles-center {
    grid-template-columns: repeat(2, 1fr);
    column-gap: 2rem;
  }
}
@media screen and (min-width: 992px) {
  .tiles-center {
    grid-template-columns: repeat(3, 1fr);
  }
}
@media screen and (min-width: 1170px) {
  .tiles-center {
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(5, 300px);
    grid-template-areas:
      "a a a b"
      "a a a c"
      "d d d d"
      "e f f f"
      "e g h i";
  }
  .tiles img {
    height: 100%;
    object-fit: cover;
  }
  .tile-1 {
    grid-area: a;
  }
  .tile-2 {
    grid-area: b;
  }
  .tile-3 {
    grid-area: c;
  }
  .tile-4 {
    grid-area: d;
  }
  .tile-5 {
    grid-area: e;
  }
  .tile-6 {
    grid-area: f;
  }
  .tile-7 {
    grid-area: g;
  }
  .tile-8 {
    grid-area: h;
  }
  .tile-9 {
    grid-area: i;
  }
}
/* 
============
Layout
============
*/
.header {
  background: var(--primaryColor);
  color: var(--mainWhite);
  text-align: center;
  padding: 0.5rem 0;
}
.navbar {
  background: var(--darkGrey);
}
.navbar li {
  list-style-type: none;
}
.navbar a {
  padding: 1rem;
  display: inline-block;
  text-transform: capitalize;
  letter-spacing: var(--mainSpacing);
  font-size: 1rem;
  color: var(--mainBlack);
  transition: var(--mainTransition);
}
.navbar a:hover {
  color: var(--mainWhite);
}
.content {
  padding: 2rem;
}
.content p {
  font-size: 1rem;
}
.sidebar {
  background: var(--primaryColor);
  padding: 1rem 0;
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  justify-items: center;
  color: var(--mainWhite);
  font-size: 1rem;
}
.footer {
  background: var(--mainBlack);
  color: var(--mainWhite);
  text-align: center;
  text-transform: capitalize;
  padding: 0.5rem 0;
}
.footer p {
  font-size: 1rem;
}
.main {
  min-height: 100vh;
  display: grid;
  grid-template-columns: 1fr;
  /* there are five elements within main, heading, navbar, content, sidebar and footer.  We want content to desplay as much as the screen allows.  The vertical size of the rst of the elements is ok */
  grid-template-rows: auto auto 1fr auto auto;
}
@media screen and (min-width: 768px) {
  .navbar ul {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    justify-items: center;
  }
}
@media screen and (min-width: 992px) {
  .main {
    grid-template-columns: [start] 12.5rem [col-1-end] 1fr [col-2-end] 3.4rem [end];
    grid-template-rows: [start] auto [row-1-end] 1fr [row-2-end] auto [end];
  }
  .header {
    grid-column: start/end;
    grid-row: start/row-1-end;
  }
  .navbar {
    grid-column: start/col-1-end;
    grid-row: row-1-end/row-2-end;
  }
  .content {
    grid-column: col-1-end/col-2-end;
    grid-row: row-1-end/row-2-end;
  }
  .sidebar {
    grid-column: col-2-end/end;
    grid-row: row-1-end/row-2-end;
  }
  .footer {
    grid-column: start/end;
    grid-row: row-2-end/end;
  }
  .navbar ul {
    grid-template-columns: 1fr;
    align-items: center;
    min-height: 100%;
  }
  .sidebar {
    grid-template-columns: 1fr;
    align-items: center;
    min-height: 100%;
    background: var(--darkGrey);
  }
}
